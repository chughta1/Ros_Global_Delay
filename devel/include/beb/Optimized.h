// Generated by gencpp from file beb/Optimized.msg
// DO NOT EDIT!


#ifndef BEB_MESSAGE_OPTIMIZED_H
#define BEB_MESSAGE_OPTIMIZED_H

#include <ros/service_traits.h>


#include <beb/OptimizedRequest.h>
#include <beb/OptimizedResponse.h>


namespace beb
{

struct Optimized
{

typedef OptimizedRequest Request;
typedef OptimizedResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Optimized
} // namespace beb


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::beb::Optimized > {
  static const char* value()
  {
    return "44cbd9eed0dcaf0a9959d08fbba67dd6";
  }

  static const char* value(const ::beb::Optimized&) { return value(); }
};

template<>
struct DataType< ::beb::Optimized > {
  static const char* value()
  {
    return "beb/Optimized";
  }

  static const char* value(const ::beb::Optimized&) { return value(); }
};


// service_traits::MD5Sum< ::beb::OptimizedRequest> should match 
// service_traits::MD5Sum< ::beb::Optimized > 
template<>
struct MD5Sum< ::beb::OptimizedRequest>
{
  static const char* value()
  {
    return MD5Sum< ::beb::Optimized >::value();
  }
  static const char* value(const ::beb::OptimizedRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::beb::OptimizedRequest> should match 
// service_traits::DataType< ::beb::Optimized > 
template<>
struct DataType< ::beb::OptimizedRequest>
{
  static const char* value()
  {
    return DataType< ::beb::Optimized >::value();
  }
  static const char* value(const ::beb::OptimizedRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::beb::OptimizedResponse> should match 
// service_traits::MD5Sum< ::beb::Optimized > 
template<>
struct MD5Sum< ::beb::OptimizedResponse>
{
  static const char* value()
  {
    return MD5Sum< ::beb::Optimized >::value();
  }
  static const char* value(const ::beb::OptimizedResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::beb::OptimizedResponse> should match 
// service_traits::DataType< ::beb::Optimized > 
template<>
struct DataType< ::beb::OptimizedResponse>
{
  static const char* value()
  {
    return DataType< ::beb::Optimized >::value();
  }
  static const char* value(const ::beb::OptimizedResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // BEB_MESSAGE_OPTIMIZED_H
