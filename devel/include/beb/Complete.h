// Generated by gencpp from file beb/Complete.msg
// DO NOT EDIT!


#ifndef BEB_MESSAGE_COMPLETE_H
#define BEB_MESSAGE_COMPLETE_H

#include <ros/service_traits.h>


#include <beb/CompleteRequest.h>
#include <beb/CompleteResponse.h>


namespace beb
{

struct Complete
{

typedef CompleteRequest Request;
typedef CompleteResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Complete
} // namespace beb


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::beb::Complete > {
  static const char* value()
  {
    return "8b08a6f5f9673998ccc75228e00beb4f";
  }

  static const char* value(const ::beb::Complete&) { return value(); }
};

template<>
struct DataType< ::beb::Complete > {
  static const char* value()
  {
    return "beb/Complete";
  }

  static const char* value(const ::beb::Complete&) { return value(); }
};


// service_traits::MD5Sum< ::beb::CompleteRequest> should match 
// service_traits::MD5Sum< ::beb::Complete > 
template<>
struct MD5Sum< ::beb::CompleteRequest>
{
  static const char* value()
  {
    return MD5Sum< ::beb::Complete >::value();
  }
  static const char* value(const ::beb::CompleteRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::beb::CompleteRequest> should match 
// service_traits::DataType< ::beb::Complete > 
template<>
struct DataType< ::beb::CompleteRequest>
{
  static const char* value()
  {
    return DataType< ::beb::Complete >::value();
  }
  static const char* value(const ::beb::CompleteRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::beb::CompleteResponse> should match 
// service_traits::MD5Sum< ::beb::Complete > 
template<>
struct MD5Sum< ::beb::CompleteResponse>
{
  static const char* value()
  {
    return MD5Sum< ::beb::Complete >::value();
  }
  static const char* value(const ::beb::CompleteResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::beb::CompleteResponse> should match 
// service_traits::DataType< ::beb::Complete > 
template<>
struct DataType< ::beb::CompleteResponse>
{
  static const char* value()
  {
    return DataType< ::beb::Complete >::value();
  }
  static const char* value(const ::beb::CompleteResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // BEB_MESSAGE_COMPLETE_H
